#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

DEB_VERSION:=$(shell dpkg-parsechangelog | grep "^Version:" | cut  -d" " -f2 | cut -d"-" -f1 | cut -d"+" -f1 )
CUR_VERSION:=$(shell PYTHONPATH=src python -c "from catkin_lint import __version__; print __version__" )

ifneq ($(DEB_VERSION),$(CUR_VERSION))
$(error Debian version $(DEB_VERSION) does not match package version $(CUR_VERSION))
endif

PYTHON2:=$(shell pyversions -d)
PYTHON3:=$(shell py3versions -d)

%:
	dh $@ --with python2,python3 --buildsystem=python_distutils

override_dh_auto_clean:
	dh_auto_clean
	rm -rf build

override_dh_auto_build:
	true

override_dh_auto_install:
	set -e; for python in $(PYTHON2); do \
		$$python setup.py install --install-layout=deb --root=debian/python-catkin-lint; \
	done
	set -e; for python in $(PYTHON3); do \
		$$python setup.py install --install-layout=deb --root=debian/python3-catkin-lint; \
	done
	set -e; for python in python python3; do \
		mkdir -p debian/$$python-catkin-lint/etc/bash_completion.d; \
		cp bash/catkin_lint debian/$$python-catkin-lint/etc/bash_completion.d; \
	done

make-orig-tar:
	git config tar.tar.xz.command "xz -c"
	git archive --prefix=catkin-lint-$(CUR_VERSION)/ -o ../catkin-lint_$(CUR_VERSION).orig.tar.xz $(shell git merge-base debian $(CUR_VERSION) )

make-patches:
	rm -rf debian/patches
	mkdir debian/patches
	git format-patch -o debian/patches $(shell git merge-base debian $(CUR_VERSION) )..master
	ls debian/patches/[0-9]* | sed -e 's/^debian\/patches\///' > debian/patches/series

clean-patches:
	rm -rf debian/patches

